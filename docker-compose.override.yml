version: "3.8"
services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: builder
    volumes:
      - ./server:/app
    ports:
      - "8000:8000"
    image: fooddeliverybackend:latest
    container_name: backend
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./server/.env
    environment:
      - NODE_ENV=development
      - DEV_MONGODB_URI=mongodb://mongo:27017/FoodDelivery?replicaSet=rs0
    command: npm run dev

  mongo:
    image: mongo:6.0
    container_name: mongo
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo_data:
  redis_data:
